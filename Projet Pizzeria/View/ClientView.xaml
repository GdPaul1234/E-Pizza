<UserControl
    x:Class="Projet_Pizzeria.View.ClientView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:Projet_Pizzeria.View"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    Loaded="UserControl_Loaded"
    mc:Ignorable="d">

    <UserControl.Resources>
        <CollectionViewSource x:Key="clientViewSource" />
        <CollectionViewSource x:Key="clientCommandesViewSource" Source="{Binding Commandes, Source={StaticResource clientViewSource}}" />
        <CollectionViewSource x:Key="commandeItemsViewSource" Source="{Binding Items, Source={StaticResource clientCommandesViewSource}}" />
    </UserControl.Resources>

    <DockPanel>
        <!--  Toolbar  -->
        <ToolBarTray DockPanel.Dock="Top">
            <ToolBar>
                <Button
                    Name="Import"
                    Click="Import_Click"
                    ToolTip="Ouvrir une sauvegarde">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="FolderOpen" />
                        <TextBlock>Ouvrir</TextBlock>
                    </StackPanel>
                </Button>

                <Button
                    Name="Export"
                    Click="Export_Click"
                    ToolTip="Exporter dans un fichier">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="Share" />
                        <TextBlock>Export.</TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>

            <ToolBar>
                <Button Click="AddClient_Button_Click" ToolTip="Ajouter un client">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="UserPlus" />
                        <TextBlock>Nouv. client</TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>

            <ToolBar>
                <ToggleButton
                    Name="orderNameAsc"
                    Click="FilterButton_Click"
                    IsChecked="{Binding ToggleButtonLogic.OrderAlphaAsc, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Tag="orderName"
                    ToolBar.OverflowMode="Never"
                    ToolTip="Trier les noms (croissant)">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="SortAlphaAsc" />
                        <TextBlock>Nom</TextBlock>
                    </StackPanel>
                </ToggleButton>

                <ToggleButton
                    Name="orderNameDesc"
                    Click="FilterButton_Click"
                    IsChecked="{Binding ToggleButtonLogic.OrderAlphaDesc, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Tag="orderName"
                    ToolTip="Trier les noms (desc.)">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="SortAlphaDesc" />
                        <TextBlock>Nom</TextBlock>
                    </StackPanel>
                </ToggleButton>

                <Separator />

                <ToggleButton
                    Name="orderAchatsAsc"
                    Click="FilterButton_Click"
                    IsChecked="{Binding ToggleButtonLogic.OrderAchatsAsc, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Tag="orderAchats"
                    ToolTip="Trier le montant des achats cumulés (croissant)">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="SortNumericAsc" />
                        <TextBlock>Achats</TextBlock>
                    </StackPanel>
                </ToggleButton>

                <ToggleButton
                    Name="orderAchatsDesc"
                    Click="FilterButton_Click"
                    IsChecked="{Binding ToggleButtonLogic.OrderAchatsDesc, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    Tag="orderAchats"
                    ToolBar.OverflowMode="Never"
                    ToolTip="Trier le montant des achats cumulés (desc.)">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="SortNumericDesc" />
                        <TextBlock>Achats</TextBlock>
                    </StackPanel>
                </ToggleButton>

                <Separator />

                <StackPanel>
                    <TextBox
                        Name="CitySearch"
                        Width="100"
                        TextChanged="CitySearch_TextChanged" />
                    <TextBlock HorizontalAlignment="Center">Ville</TextBlock>
                </StackPanel>

                <Separator />

                <Button Click="Reset_Button_Click" ToolTip="Réinitialiser les filtres">
                    <StackPanel>
                        <fa:ImageAwesome
                            Width="16"
                            Height="16"
                            Icon="Recycle" />
                        <TextBlock>Reset</TextBlock>
                    </StackPanel>
                </Button>
            </ToolBar>
        </ToolBarTray>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="3*" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <!--
                WPF: Grid with column/row margin/padding?
                https://stackoverflow.com/questions/1319974/wpf-grid-with-column-row-margin-padding
            -->
            <Grid.Resources>
                <Style TargetType="Border">
                    <Setter Property="Padding" Value="5,5,5,5" />
                </Style>
            </Grid.Resources>

            <!--
                Getting Started with WPF
                https://docs.microsoft.com/en-us/ef/core/get-started/wpf
            -->
            <Border Grid.ColumnSpan="2">
                <DataGrid
                    x:Name="clientDataGrid"
                    AutoGenerateColumns="False"
                    EnableRowVirtualization="True"
                    IsReadOnly="True"
                    ItemsSource="{Binding Source={StaticResource clientViewSource}}"
                    RowDetailsVisibilityMode="VisibleWhenSelected"
                    Sorting="ClientDataGrid_DisableSorting">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="SizeToHeader"
                            Binding="{Binding NoClient}"
                            Header="No Client" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Nom}"
                            Header="Nom" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Prenom}"
                            Header="Prénom" />
                        <DataGridTextColumn
                            Width="SizeToHeader"
                            Binding="{Binding MontantAchatCumule}"
                            Header="Achats Cumulés (€)" />
                        <DataGridTextColumn
                            Width="100"
                            Binding="{Binding Adresse.Ville}"
                            Header="Ville" />
                    </DataGrid.Columns>
                </DataGrid>
            </Border>

            <!--  Info personne  -->
            <Border
                Grid.RowSpan="2"
                Grid.Column="2"
                Margin="0">
                <ScrollViewer>
                    <StackPanel Margin="0,0,5,0">
                        <GroupBox Background="#FFF0F0F0" Header="Informations pers.">
                            <StackPanel>
                                <Label>Nom:</Label>
                                <TextBox Name="nom" Text="{Binding SelectedItem.Nom, ElementName=clientDataGrid}" />

                                <Label>Prenom:</Label>
                                <TextBox Name="prenom" Text="{Binding SelectedItem.Prenom, ElementName=clientDataGrid}" />

                                <Label>Telephone:</Label>
                                <TextBox Name="telephone" Text="{Binding SelectedItem.NoTelephone, ElementName=clientDataGrid}" />
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Background="#FFF0F0F0" Header="Adresse">
                            <StackPanel>
                                <Label>Rue:</Label>
                                <TextBox Name="adresseRue" Text="{Binding SelectedItem.Adresse.Rue, ElementName=clientDataGrid}" />

                                <Label>Ville:</Label>
                                <TextBox Name="adresseVille" Text="{Binding SelectedItem.Adresse.Ville, ElementName=clientDataGrid}" />

                                <Label>CP:</Label>
                                <TextBox Name="adresseCp" Text="{Binding SelectedItem.Adresse.Cp, ElementName=clientDataGrid}" />
                            </StackPanel>
                        </GroupBox>

                        <WrapPanel HorizontalAlignment="Center">
                            <WrapPanel.Resources>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="5,5,5,5" />
                                </Style>
                            </WrapPanel.Resources>

                            <Button Click="EditClient_Button_Click">Val. édition</Button>
                            <Button Click="DelClient_Button_Click" Tag="{Binding SelectedItem, ElementName=clientDataGrid}">
                                Suppr. client
                            </Button>
                        </WrapPanel>
                    </StackPanel>
                </ScrollViewer>
            </Border>

            <!--  Commande Details Grid  -->
            <Border Grid.Row="1">
                <DataGrid
                    x:Name="commandesDataGrid"
                    AutoGenerateColumns="False"
                    EnableRowVirtualization="True"
                    IsReadOnly="True"
                    ItemsSource="{Binding Source={StaticResource clientCommandesViewSource}}"
                    RowDetailsVisibilityMode="VisibleWhenSelected">
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="SizeToHeader"
                            Binding="{Binding NoClient}"
                            Header="No Client" />
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding DateHeureCommande}"
                            Header="Date commande" />
                        <DataGridTextColumn
                            Width="SizeToHeader"
                            Binding="{Binding MontantTotal}"
                            Header="Montant (€)" />
                    </DataGrid.Columns>
                </DataGrid>
            </Border>

            <!--  Item Details Grid  -->
            <Border Grid.Row="1" Grid.Column="1">
                <DataGrid
                    x:Name="itemsDataGrid"
                    AutoGenerateColumns="True"
                    EnableRowVirtualization="True"
                    IsReadOnly="True"
                    ItemsSource="{Binding Source={StaticResource commandeItemsViewSource}}"
                    RowDetailsVisibilityMode="VisibleWhenSelected" />
            </Border>
        </Grid>
    </DockPanel>
</UserControl>